["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11426 = arguments.length;\nvar i__5727__auto___11427 = (0);\nwhile(true){\nif((i__5727__auto___11427 < len__5726__auto___11426)){\nargs__5732__auto__.push((arguments[i__5727__auto___11427]));\n\nvar G__11428 = (i__5727__auto___11427 + (1));\ni__5727__auto___11427 = G__11428;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((3) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__11147){\nvar vec__11148 = p__11147;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11148,(0),null);\nvar job_fn = (function (){\nvar G__11151 = value;\nvar G__11152 = tag;\nvar G__11153 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null, ));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__11151,G__11152,G__11153) : method.call(null, G__11151,G__11152,G__11153));\n});\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__11154 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__11155 = (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__11155);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__11154);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq11142){\nvar G__11143 = cljs.core.first(seq11142);\nvar seq11142__$1 = cljs.core.next(seq11142);\nvar G__11144 = cljs.core.first(seq11142__$1);\nvar seq11142__$2 = cljs.core.next(seq11142__$1);\nvar G__11145 = cljs.core.first(seq11142__$2);\nvar seq11142__$3 = cljs.core.next(seq11142__$2);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11143,G__11144,G__11145,seq11142__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11433 = arguments.length;\nvar i__5727__auto___11434 = (0);\nwhile(true){\nif((i__5727__auto___11434 < len__5726__auto___11433)){\nargs__5732__auto__.push((arguments[i__5727__auto___11434]));\n\nvar G__11435 = (i__5727__auto___11434 + (1));\ni__5727__auto___11434 = G__11435;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__11170){\nvar vec__11171 = p__11170;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11171,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq11157){\nvar G__11158 = cljs.core.first(seq11157);\nvar seq11157__$1 = cljs.core.next(seq11157);\nvar G__11159 = cljs.core.first(seq11157__$1);\nvar seq11157__$2 = cljs.core.next(seq11157__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11158,G__11159,seq11157__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11438 = arguments.length;\nvar i__5727__auto___11439 = (0);\nwhile(true){\nif((i__5727__auto___11439 < len__5726__auto___11438)){\nargs__5732__auto__.push((arguments[i__5727__auto___11439]));\n\nvar G__11441 = (i__5727__auto___11439 + (1));\ni__5727__auto___11439 = G__11441;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__11181){\nvar vec__11182 = p__11181;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11182,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq11176){\nvar G__11177 = cljs.core.first(seq11176);\nvar seq11176__$1 = cljs.core.next(seq11176);\nvar G__11178 = cljs.core.first(seq11176__$1);\nvar seq11176__$2 = cljs.core.next(seq11176__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11177,G__11178,seq11176__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11446 = arguments.length;\nvar i__5727__auto___11447 = (0);\nwhile(true){\nif((i__5727__auto___11447 < len__5726__auto___11446)){\nargs__5732__auto__.push((arguments[i__5727__auto___11447]));\n\nvar G__11448 = (i__5727__auto___11447 + (1));\ni__5727__auto___11447 = G__11448;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq11185){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11185));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11449 = arguments.length;\nvar i__5727__auto___11450 = (0);\nwhile(true){\nif((i__5727__auto___11450 < len__5726__auto___11449)){\nargs__5732__auto__.push((arguments[i__5727__auto___11450]));\n\nvar G__11451 = (i__5727__auto___11450 + (1));\ni__5727__auto___11450 = G__11451;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq11189){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11189));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11452 = arguments.length;\nvar i__5727__auto___11453 = (0);\nwhile(true){\nif((i__5727__auto___11453 < len__5726__auto___11452)){\nargs__5732__auto__.push((arguments[i__5727__auto___11453]));\n\nvar G__11454 = (i__5727__auto___11453 + (1));\ni__5727__auto___11453 = G__11454;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__11198){\nvar vec__11199 = p__11198;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11199,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq11196){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11196));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11455 = arguments.length;\nvar i__5727__auto___11456 = (0);\nwhile(true){\nif((i__5727__auto___11456 < len__5726__auto___11455)){\nargs__5732__auto__.push((arguments[i__5727__auto___11456]));\n\nvar G__11457 = (i__5727__auto___11456 + (1));\ni__5727__auto___11456 = G__11457;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq11204){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11204));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11458 = arguments.length;\nvar i__5727__auto___11459 = (0);\nwhile(true){\nif((i__5727__auto___11459 < len__5726__auto___11458)){\nargs__5732__auto__.push((arguments[i__5727__auto___11459]));\n\nvar G__11460 = (i__5727__auto___11459 + (1));\ni__5727__auto___11459 = G__11460;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq11208){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11208));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11461 = arguments.length;\nvar i__5727__auto___11462 = (0);\nwhile(true){\nif((i__5727__auto___11462 < len__5726__auto___11461)){\nargs__5732__auto__.push((arguments[i__5727__auto___11462]));\n\nvar G__11464 = (i__5727__auto___11462 + (1));\ni__5727__auto___11462 = G__11464;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq11210){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11210));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__11212_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__11212_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11466 = arguments.length;\nvar i__5727__auto___11467 = (0);\nwhile(true){\nif((i__5727__auto___11467 < len__5726__auto___11466)){\nargs__5732__auto__.push((arguments[i__5727__auto___11467]));\n\nvar G__11468 = (i__5727__auto___11467 + (1));\ni__5727__auto___11467 = G__11468;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq11213){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11213));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.truth_(isFinite(number))){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n} else {\nif(cljs.core.truth_(isNaN(number))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-nan-tag\",\"float-nan-tag\",557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-infinity-tag\",\"float-infinity-tag\",-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n}\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11480 = arguments.length;\nvar i__5727__auto___11481 = (0);\nwhile(true){\nif((i__5727__auto___11481 < len__5726__auto___11480)){\nargs__5732__auto__.push((arguments[i__5727__auto___11481]));\n\nvar G__11482 = (i__5727__auto___11481 + (1));\ni__5727__auto___11481 = G__11482;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__11217){\nvar vec__11218 = p__11217;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11218,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq11215){\nvar G__11216 = cljs.core.first(seq11215);\nvar seq11215__$1 = cljs.core.next(seq11215);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11216,seq11215__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__11495 = cljs.core.rest(work);\nvar G__11496 = (index + (1));\nvar G__11497 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__11495;\nindex = G__11496;\nlines = G__11497;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\ndevtools.formatters.state.push_object_to_current_history_BANG_(cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),starting_index], null)));\n\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11500 = arguments.length;\nvar i__5727__auto___11501 = (0);\nwhile(true){\nif((i__5727__auto___11501 < len__5726__auto___11500)){\nargs__5732__auto__.push((arguments[i__5727__auto___11501]));\n\nvar G__11502 = (i__5727__auto___11501 + (1));\ni__5727__auto___11501 = G__11502;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__11236){\nvar vec__11237 = p__11236;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11237,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5802__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar more_symbol = temp__5802__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null, more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__5002__auto__ = details_markup;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq11230){\nvar G__11233 = cljs.core.first(seq11230);\nvar seq11230__$1 = cljs.core.next(seq11230);\nvar G__11234 = cljs.core.first(seq11230__$1);\nvar seq11230__$2 = cljs.core.next(seq11230__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11233,G__11234,seq11230__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11506 = arguments.length;\nvar i__5727__auto___11507 = (0);\nwhile(true){\nif((i__5727__auto___11507 < len__5726__auto___11506)){\nargs__5732__auto__.push((arguments[i__5727__auto___11507]));\n\nvar G__11508 = (i__5727__auto___11507 + (1));\ni__5727__auto___11507 = G__11508;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq11256){\nvar G__11257 = cljs.core.first(seq11256);\nvar seq11256__$1 = cljs.core.next(seq11256);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11257,seq11256__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__11291 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11291,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11291,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11530 = arguments.length;\nvar i__5727__auto___11531 = (0);\nwhile(true){\nif((i__5727__auto___11531 < len__5726__auto___11530)){\nargs__5732__auto__.push((arguments[i__5727__auto___11531]));\n\nvar G__11533 = (i__5727__auto___11531 + (1));\ni__5727__auto___11531 = G__11533;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__11301){\nvar vec__11302 = p__11301;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11302,(0),null);\nvar vec__11305 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11305,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11305,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11305,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = header_tag;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq11297){\nvar G__11298 = cljs.core.first(seq11297);\nvar seq11297__$1 = cljs.core.next(seq11297);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11298,seq11297__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11544 = arguments.length;\nvar i__5727__auto___11545 = (0);\nwhile(true){\nif((i__5727__auto___11545 < len__5726__auto___11544)){\nargs__5732__auto__.push((arguments[i__5727__auto___11545]));\n\nvar G__11546 = (i__5727__auto___11545 + (1));\ni__5727__auto___11545 = G__11546;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__11310){\nvar vec__11311 = p__11310;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11311,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq11308){\nvar G__11309 = cljs.core.first(seq11308);\nvar seq11308__$1 = cljs.core.next(seq11308);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11309,seq11308__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11547 = arguments.length;\nvar i__5727__auto___11548 = (0);\nwhile(true){\nif((i__5727__auto___11548 < len__5726__auto___11547)){\nargs__5732__auto__.push((arguments[i__5727__auto___11548]));\n\nvar G__11549 = (i__5727__auto___11548 + (1));\ni__5727__auto___11548 = G__11549;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__11349){\nvar vec__11350 = p__11349;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11350,(0),null);\nvar max_fns__$1 = (function (){var or__5002__auto__ = max_fns;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq11319){\nvar G__11320 = cljs.core.first(seq11319);\nvar seq11319__$1 = cljs.core.next(seq11319);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11320,seq11319__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__11359){\nvar vec__11360 = p__11359;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11360,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11360,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11550 = arguments.length;\nvar i__5727__auto___11551 = (0);\nwhile(true){\nif((i__5727__auto___11551 < len__5726__auto___11550)){\nargs__5732__auto__.push((arguments[i__5727__auto___11551]));\n\nvar G__11552 = (i__5727__auto___11551 + (1));\ni__5727__auto___11551 = G__11552;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__11366){\nvar vec__11367 = p__11366;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11367,(0),null);\nvar map__11370 = protocol;\nvar map__11370__$1 = cljs.core.__destructure_map(map__11370);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11370__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11370__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11370__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11370__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = tag;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq11363){\nvar G__11364 = cljs.core.first(seq11363);\nvar seq11363__$1 = cljs.core.next(seq11363);\nvar G__11365 = cljs.core.first(seq11363__$1);\nvar seq11363__$2 = cljs.core.next(seq11363__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11364,G__11365,seq11363__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11554 = arguments.length;\nvar i__5727__auto___11555 = (0);\nwhile(true){\nif((i__5727__auto___11555 < len__5726__auto___11554)){\nargs__5732__auto__.push((arguments[i__5727__auto___11555]));\n\nvar G__11556 = (i__5727__auto___11555 + (1));\ni__5727__auto___11555 = G__11556;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__11379){\nvar vec__11380 = p__11379;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11380,(0),null);\nvar max_protocols__$1 = (function (){var or__5002__auto__ = max_protocols;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq11374){\nvar G__11375 = cljs.core.first(seq11374);\nvar seq11374__$1 = cljs.core.next(seq11374);\nvar G__11376 = cljs.core.first(seq11374__$1);\nvar seq11374__$2 = cljs.core.next(seq11374__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11375,G__11376,seq11374__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__11386_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__11386_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__11389 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11389,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11389,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___11560 = arguments.length;\nvar i__5727__auto___11561 = (0);\nwhile(true){\nif((i__5727__auto___11561 < len__5726__auto___11560)){\nargs__5732__auto__.push((arguments[i__5727__auto___11561]));\n\nvar G__11563 = (i__5727__auto___11561 + (1));\ni__5727__auto___11561 = G__11563;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__11397){\nvar vec__11398 = p__11397;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11398,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__5002__auto__ = max_fields;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__11401){\nvar vec__11402 = p__11401;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq11392){\nvar G__11396 = cljs.core.first(seq11392);\nvar seq11392__$1 = cljs.core.next(seq11392);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11396,seq11392__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__11413 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11413,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11413,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11413,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__5002__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5802__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar body = temp__5802__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^C",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^D","~:macro",true]],"^J","^D","~:reader-aliases",["^ "],"~:op","^L","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^R","~$devtools.formatters.printing","^S","~$devtools.formatters.state","^T","~$devtools.formatters.templating","^U","~$devtools.munging","^V","~$munging","^V","~$cljs.core","^X","~$goog","^Y"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^R","~$should-render?","^R","~$set-managed-print-level","^T","~$bool?","^R","~$cljs-instance?","^R","~$get-surrogate-body","^U","~$get-constructor","^R","~$managed-print-via-writer","^S","~$pref","^R","~$wrap-arity","^R","~$cljs-function?","^R","~$get-more-marker","^R","~$fetch-fields-values","^R","~$managed-print-via-protocol","^S","~$abbreviated?","^R","~$get-surrogate-header","^U","~$reset-depth-limits","^T","~$get-surrogate-target","^U","~$set-prevent-recursion","^T","~$get-surrogate-start-index","^U","~$abbreviate-long-string","^R","~$cljs-type?","^R","~$should-render-instance?","^R"],"^10",["^ ","^D","^D","^X","^X","^V","^V","^W","^V"],"~:form",["^I",["~$ns","^D",["^I",["^10",["^D","~:refer",["^C"]]]],["^I",["^[",["^R","^1K",["^15","^1<","^1G","^16","^1H","^12","^1@","^1F","^18","^1:","^13","^1=","^1;","^1>"]],["^S","^1K",["^19","^1?"]],["^T","^1K",["^1D","^14","^1B"]],["^U","^1K",["^17","^1C","^1E","^1A"]],["^V","~:as","^W"]]]]],"~:flags",["^ ","^10",["^F",[]],"^[",["^F",[]]],"~:js-deps",[],"~:deps",["^Y","^X","^R","^S","^T","^U","^V"]],"^L","^D","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1744140937767,"^N",["^ ","^R","^R","^D","^D","^S","^S","^U","^U","^W","^V","^T","^T","^X","^X","^Y","^Y","^V","^V"],"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (js/isFinite number)\n    (if (integer? number)\n      [:integer-tag number]\n      [:float-tag number])\n    (if (js/isNaN number)\n      [:float-nan-tag (pr-str number)]\n      [:float-infinity-tag (pr-str number)])))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  ;; This is very important when the value is a map\n  ;; we need to push the object to history so that we can be able to get the paths (i.e keys)\n  ;; the other option to this is ignoring this and then when generating paths, assume that all\n  ;; vectors that have two children which are\n  ;; a keyword as the first item and\n  ;; a sequence or map as the second item when the path info is not nil.\n  ;; are all just seq'd maps and that the first item in the vector is a key in the map.\n  ;; The seq'd map is a result of `(seq value)` done in `body-lines` above\n  (devtools.formatters.state/push-object-to-current-history! (with-meta value {:index starting-index}))\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["^R","^D","^S","^U","^T","^X","~$js","^V"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__11147","vec__11148","cljs.core.nth","seq11142","G__11143","cljs.core/first","cljs.core/next","G__11144","G__11145","self__5711__auto__","method","value","tag","max-level","job-fn","G__11151","G__11152","G__11153","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__11154","*print-level*-temp-val__11155","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__11170","vec__11171","seq11157","G__11158","G__11159","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__11181","vec__11182","seq11176","G__11177","G__11178","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq11185","self__5712__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq11189","args","devtools.formatters.markup/<surrogate>","p__11198","vec__11199","seq11196","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq11204","devtools.formatters.markup/<reference-surrogate>","seq11208","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq11210","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__11212#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq11213","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","js/isFinite","cljs.core/integer?","js/isNaN","cljs.core.pr_str","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__11217","vec__11218","seq11215","G__11216","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","devtools.formatters.state/push-object-to-current-history!","cljs.core/with-meta","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__11236","vec__11237","seq11230","G__11233","G__11234","max-count","opts","items-markups","more-count","more?","separator","or__5002__auto__","more-symbol","temp__5802__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq11256","G__11257","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__11291","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__11301","vec__11302","seq11297","G__11298","header-tag","vec__11305","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__11310","vec__11311","seq11308","G__11309","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__11349","vec__11350","seq11319","G__11320","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__11359","vec__11360","methods-markups-lists","devtools.formatters.markup/<protocol>","p__11366","vec__11367","seq11363","G__11364","G__11365","protocol","map__11370","cljs.core/--destructure-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__11379","vec__11380","seq11374","G__11375","G__11376","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__11386#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__11389","devtools.formatters.markup/<fields>","p__11397","vec__11398","seq11392","G__11396","fields","max-fields","fields-markups","p__11401","vec__11402","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__11413","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","cljs.core/PROTOCOL_SENTINEL","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$cljs.core/keep","~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$js/RegExp","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$cljs.core/partial","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/abbreviate-long-string","~$devtools.formatters.helpers/should-render-instance?","~$cljs.core/IndexedSeq","~$devtools.munging/get-protocol-object","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$cljs.core/take","~$devtools.formatters.templating/get-surrogate-start-index","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$js/isFinite","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$cljs.core/pr-str","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.munging/parse-constructor-info","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.munging/parse-fn-info","~$devtools.formatters.markup/<more-protocols>","~$cljs.core/with-meta","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.state/set-prevent-recursion","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$devtools.munging/extract-arities","~$devtools.formatters.helpers/get-constructor","~$cljs.core/get","~$cljs.core/integer?","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$js/isNaN","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$cljs.core/nth","~$devtools.munging/scan-protocols","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$cljs.core/next","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.helpers/get-more-marker","~$devtools.formatters.markup/<surrogate-target>","~$cljs.core/interpose","~$devtools.formatters.templating/get-surrogate-header","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.helpers/fetch-fields-values","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$devtools.formatters.templating/get-surrogate-body","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$devtools.munging/collect-protocol-methods","~$js/Error","~$devtools.formatters.helpers/should-render?","~$cljs.core/drop","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1Q","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^Y","~$goog.dom.HtmlElement"]]],["^1Q","devtools/formatters/printing.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^T","^R"]]],["^1Q","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1Q","devtools/formatters/markup.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^R","^S","^T","^U","^V"]]],["^1Q","devtools/formatters/helpers.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^55","^V","^56","^57"]]],["^1Q","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^59","^5:","~$goog.asserts","^58","^5;","^5<"]]],["^1Q","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^58"]]],["^1Q","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5="]]],["^1Q","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^59","~$goog.reflect","^58"]]],["^1Q","devtools/formatters/templating.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","~$clojure.walk","~$devtools.util","^57","^R","^T","~$clojure.string"]]],["^1Q","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^59","^58"]]],["^1Q","cljs/pprint.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^5H","~$goog.string","~$goog.string.StringBuffer"]]],["^1Q","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5="]]],"~:SHADOW-TIMESTAMP",[1744140476000,1744140476000,1744140474000],["^1Q","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","^5E"]]],["^1Q","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","~$goog.fs.blob","^5>","~$goog.html.SafeScript","~$goog.html.trustedtypes","^5@","^5A"]]],["^1Q","devtools/version.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5@","~$goog.html.SafeUrl","^5A","^5=","^58"]]],["^1Q","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5M","~$goog.html.SafeStyle","^5O","^5?","~$goog.html.uncheckedconversions","^5@","^58"]]],["^1Q","devtools/prefs.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","~$devtools.defaults"]]],["^1Q","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.dom.TagName","^5=","~$goog.dom.element"]]],["^1Q","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5@","^5M","^5T","~$goog.html.SafeStyleSheet","^5O","^5W","^5?","^5A","^5=","^5B","~$goog.array","~$goog.object","^58","~$goog.dom.tags","^5N"]]],["^1Q","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5["]]],["^1Q","devtools/munging.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^5H","~$devtools.context","^5[","^5J"]]],["^1Q","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5Z","^58","^59"]]],["^1Q","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Q","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5Z","^5=","~$goog.collections.maps","^5I","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Q","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5:"]]],["^1Q","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",[]]],["^1Q","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5Z","^5["]]],["^1Q","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^5I","^5J"]]],["^1Q","devtools/formatters/state.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.dom.safe","^5U","^5@","^58"]]],["^1Q","clojure/data.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","~$clojure.set"]]],["^1Q","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^58","^5<"]]],["^1Q","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.flags"]]],["^1Q","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^63","^5W"]]],["^1Q","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","^5S","^5M","^5T","^5Y","^5O","^5?","^5@","^58"]]],["^1Q","devtools/defaults.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y"]]],["^1Q","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","~$goog.math.Long","~$goog.math.Integer","^5I","^5[","^5Z","~$goog.Uri","^5J"]]],["^1Q","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5@","^5A","^5N","^5="]]],["^1Q","devtools/context.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5@","^5T","^5A","^5[","^5=","^58"]]],["^1Q","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5E"]]],["^1Q","devtools/format.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","^61"]]],["^1Q","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","^5I"]]],["^1Q","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^5=","^5A"]]],["^1Q","devtools/protocols.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X"]]],["^1Q","devtools/util.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^50",["^ ","^51",null,"^52",["^F",[]],"^53",["^Y","^X","~$goog.userAgent","~$clojure.data","~$devtools.version","^61","~$cljs.pprint","^55"]]]]],"~:clj-info",["^ ","jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/prefs.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/compiler.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/version.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/oops.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/munging.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/formatters/markup.clj",1744140477000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1744140473000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/pprint.cljc",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1744140474000,"jar:file:/Users/dr.breslove/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1744140473000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G",["^ ","^C",["^ ","^H",["^I",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^J","^K","^L","^D","^M",true]],"^J","^D","^N",["^ "],"^P",null,"^Q",["^ ","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^V","^X","^X","^Y","^Y"],"^Z",["^F",["^[","^10"]],"~:shadow/js-access-global",["^F",["isNaN","RegExp","isFinite","Error"]],"^11",["^ ","^12","^R","^13","^R","^14","^T","^15","^R","^16","^R","^17","^U","^18","^R","^19","^S","^1:","^R","^1;","^R","^1<","^R","^1=","^R","^1>","^R","^1?","^S","^1@","^R","^1A","^U","^1B","^T","^1C","^U","^1D","^T","^1E","^U","^1F","^R","^1G","^R","^1H","^R"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^H",["^I",["~$quote",["^I",[["~$markups-lists"]]]]]],"^J","^4R","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^I",[["^7D"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^8",1,"~:variadic?",false,"^7",121,"~:ret-tag","~$cljs.core/IVector","^9",121,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^7C",["^I",[["^7D"]]]]]],"~$<native-reference>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^H",["^I",["^7C",["^I",[["~$object"]]]]]],"^J","^4D","^6","devtools/formatters/markup.cljs","^:",25,"^7E",["^I",[["^7N"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",56,"^7I","^7J","^9",56,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7N"]]]]]],"~$<reference-surrogate>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^H",["^I",["^7C",["^I",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^7H",true,"~:fixed-arity",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]]],"^J","^4G","^6","devtools/formatters/markup.cljs","^:",28,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7P"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"~:methods",[["^ ","^7R",0,"^7H",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^7I","~$any","^9",50,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^7P"]]]],"~$<keyword>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^H",["^I",["^7C",["^I",[["~$keyword"]]]]]],"^J","^4H","^6","devtools/formatters/markup.cljs","^:",16,"^7E",["^I",[["^7X"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",75,"^7I","^7J","^9",75,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7X"]]]]]],"~$print-via-writer",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^H",["^I",["^7C",["^I",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]]],"^J","^4Q","^6","devtools/formatters/markup.cljs","^:",23,"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^7F",null,"^7R",2,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",2,"^7H",true,"^7T",["^F",[null,"^7V"]]]],"^7",28,"^7I","^7V","^9",28,"^7K",2,"^7L",true,"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]]],"~$<protocol-method-arities>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",32,"^H",["^I",["^7C",["^I",[["~$fns","~$&",["~$max-fns"]]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^82",["^83"]]]],"^H",["^I",[["^82","~$&",["^83"]]]],"^7G",["^I",[null]]]],"^J","^4L","^6","devtools/formatters/markup.cljs","^:",32,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^82",["^83"]]]],"^H",["^I",[["^82","~$&",["^83"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^82",["^83"]]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^7U"]],"^7",299,"^7I","^7V","^9",299,"^7K",1,"^7L",true,"^H",["^I",[["^82","~$&",["^83"]]]]],"~$<surrogate-header>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",416,"^8",7,"^9",416,"^:",25,"^H",["^I",["^7C",["^I",[["~$surrogate"]]]]]],"^J","^39","^6","devtools/formatters/markup.cljs","^:",25,"^7E",["^I",[["^85"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",416,"^7I",["^F",[null,"^7V"]],"^9",416,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^85"]]]]]],"~$<details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",173,"^8",7,"^9",173,"^:",16,"^H",["^I",["^7C",["^I",[["^7Z","~$starting-index"]]]]]],"^J","^4X","^6","devtools/formatters/markup.cljs","^:",16,"^7E",["^I",[["^7Z","^87"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",173,"^7I","~$clj","^9",173,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z","^87"]]]]]],"~$<more-protocols>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",336,"^8",7,"^9",336,"^:",23,"^H",["^I",["^7C",["^I",[["~$more-count"]]]]]],"^J","^3?","^6","devtools/formatters/markup.cljs","^:",23,"^7E",["^I",[["^8:"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",336,"^7I","^88","^9",336,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8:"]]]]]],"~$<field>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",351,"^8",7,"^9",351,"^:",14,"^H",["^I",["^7C",["^I",[["~$name","^7Z"]]]]]],"^J","^4Y","^6","devtools/formatters/markup.cljs","^:",14,"^7E",["^I",[["^8<","^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",351,"^7I","^7J","^9",351,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^8<","^7Z"]]]]]],"~$<symbol>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^H",["^I",["^7C",["^I",[["~$symbol"]]]]]],"^J","^33","^6","devtools/formatters/markup.cljs","^:",15,"^7E",["^I",[["^8>"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",78,"^7I","^7J","^9",78,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8>"]]]]]],"~$<fields-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",381,"^8",7,"^9",381,"^:",23,"^H",["^I",["^7C",["^I",[["~$fields","~$obj"]]]]]],"^J","^2C","^6","devtools/formatters/markup.cljs","^:",23,"^7E",["^I",[["^8@","^8A"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",381,"^7I","^7J","^9",381,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^8@","^8A"]]]]]],"~$<atomic>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",435,"^8",7,"^9",435,"^:",15,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"^J","^2A","^6","devtools/formatters/markup.cljs","^:",15,"^7E",["^I",[["^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",435,"^7I",["^F",["^88","^7J","^7U","~$clj-nil"]],"^9",435,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"~$<string>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",92,"^8",7,"^9",92,"^:",15,"^H",["^I",["^7C",["^I",[["~$string"]]]]]],"^J","^2?","^6","devtools/formatters/markup.cljs","^:",15,"^7E",["^I",[["^8E"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",92,"^7I","^88","^9",92,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8E"]]]]]],"~$<standard-body>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",128,"^8",7,"^9",128,"^:",22,"^H",["^I",["^7C",["^I",[["^7D","~$&",["~$no-margin?"]]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^7D",["^8G"]]]],"^H",["^I",[["^7D","~$&",["^8G"]]]],"^7G",["^I",[null]]]],"^J","^2J","^6","devtools/formatters/markup.cljs","^:",22,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^7D",["^8G"]]]],"^H",["^I",[["^7D","~$&",["^8G"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7D",["^8G"]]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^7U"]],"^7",128,"^7I","^7V","^9",128,"^7K",1,"^7L",true,"^H",["^I",[["^7D","~$&",["^8G"]]]]],"~$<type-basis>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",19,"^H",["^I",["^7C",["^I",[["~$basis"]]]]]],"^J","^2H","^6","devtools/formatters/markup.cljs","^:",19,"^7E",["^I",[["^8I"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",266,"^7I","^7U","^9",266,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8I"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",449,"^8",16,"^9",449,"^:",27,"~:dynamic",true],"^J","^3A","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^8K",true,"^7",449,"^9",449,"^7T","^7V"],"~$print-via-protocol",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^H",["^I",["^7C",["^I",[["^7Z","^7[","~$&",["^80"]]]]]],"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]]],"^J","^3Y","^6","devtools/formatters/markup.cljs","^:",25,"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7Z","^7[",["^80"]]]],"^7F",null,"^7R",2,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",2,"^7H",true,"^7T",["^F",[null,"^7V"]]]],"^7",31,"^7I","^7V","^9",31,"^7K",2,"^7L",true,"^H",["^I",[["^7Z","^7[","~$&",["^80"]]]]],"~$print-with",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^H",["^I",["^7C",["^I",[["~$method","^7Z","^7[","~$&",["^80"]]]]]],"^7Q",["^ ","^7H",true,"^7R",3,"^7K",3,"^7E",[["^I",["^8N","^7Z","^7[",["^80"]]]],"^H",["^I",[["^8N","^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]]],"^J","^3W","^6","devtools/formatters/markup.cljs","^:",17,"^7Q",["^ ","^7H",true,"^7R",3,"^7K",3,"^7E",[["^I",["^8N","^7Z","^7[",["^80"]]]],"^H",["^I",[["^8N","^7Z","^7[","~$&",["^80"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8N","^7Z","^7[",["^80"]]]],"^7F",null,"^7R",3,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",3,"^7H",true,"^7T",["^F",[null,"^7V"]]]],"^7",21,"^7I","^7V","^9",21,"^7K",3,"^7L",true,"^H",["^I",[["^8N","^7Z","^7[","~$&",["^80"]]]]],"~$<bool>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^H",["^I",["^7C",["^I",[["~$bool"]]]]]],"^J","^3V","^6","devtools/formatters/markup.cljs","^:",13,"^7E",["^I",[["^8P"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",72,"^7I","^7J","^9",72,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8P"]]]]]],"~$<standalone-type>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",288,"^8",7,"^9",288,"^:",24,"^H",["^I",["^7C",["^I",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8R",["^8S"]]]],"^H",["^I",[["^8R","~$&",["^8S"]]]],"^7G",["^I",[null]]]],"^J","^2;","^6","devtools/formatters/markup.cljs","^:",24,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8R",["^8S"]]]],"^H",["^I",[["^8R","~$&",["^8S"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8R",["^8S"]]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^7J"]],"^7",288,"^7I","^7V","^9",288,"^7K",1,"^7L",true,"^H",["^I",[["^8R","~$&",["^8S"]]]]],"~$<preview>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",113,"^8",7,"^9",113,"^:",16,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"^J","^2U","^6","devtools/formatters/markup.cljs","^:",16,"^7E",["^I",[["^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",113,"^7I",["^F",[null,"^7V"]],"^9",113,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"~$<header>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",413,"^8",7,"^9",413,"^:",15,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"^J","^44","^6","devtools/formatters/markup.cljs","^:",15,"^7E",["^I",[["^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",413,"^7I","^7U","^9",413,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"~$<protocol-method>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",312,"^8",7,"^9",312,"^:",24,"^H",["^I",["^7C",["^I",[["^8<","~$arities"]]]]]],"^J","^45","^6","devtools/formatters/markup.cljs","^:",24,"^7E",["^I",[["^8<","^8W"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",312,"^7I","^7J","^9",312,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^8<","^8W"]]]]]],"~$<cljs-land>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^H",["^I",["^7C",["^I",[["~$&","~$children"]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]]],"^J","^26","^6","devtools/formatters/markup.cljs","^:",18,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8Y"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7U"]],"^7",65,"^7I","^7V","^9",65,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^8Y"]]]],"~$<type-basis-item>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",263,"^8",7,"^9",263,"^:",24,"^H",["^I",["^7C",["^I",[["~$basis-item"]]]]]],"^J","^25","^6","devtools/formatters/markup.cljs","^:",24,"^7E",["^I",[["^8["]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",263,"^7I","^7J","^9",263,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8["]]]]]],"~$<protocol-method-arities-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",296,"^8",7,"^9",296,"^:",40,"^H",["^I",["^7C",["^I",[["^82"]]]]]],"^J","^34","^6","devtools/formatters/markup.cljs","^:",40,"^7E",["^I",[["^82"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",296,"^7I","^7J","^9",296,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^82"]]]]]],"~$<fields-details-row>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",358,"^8",7,"^9",358,"^:",27,"^H",["^I",["^7C",["^I",[["~$field"]]]]]],"^J","^2I","^6","devtools/formatters/markup.cljs","^:",27,"^7E",["^I",[["^92"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",358,"^7I","^7J","^9",358,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^92"]]]]]],"~$<standard-body-reference>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",137,"^8",7,"^9",137,"^:",32,"^H",["^I",["^7C",["^I",[["~$o"]]]]]],"^J","^35","^6","devtools/formatters/markup.cljs","^:",32,"^7E",["^I",[["~$o"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",137,"^7I","^7U","^9",137,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",427,"^8",7,"^9",427,"^:",23,"^H",["^I",["^7C",["^I",[["^85"]]]]]],"^J","^2D","^6","devtools/formatters/markup.cljs","^:",23,"^7E",["^I",[["^85"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",427,"^7I",["^F",["^88","^7V","^8C"]],"^9",427,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^85"]]]]]],"~$get-markup-db",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",461,"^8",7,"^9",461,"^:",20,"^H",["^I",["^7C",["^I",[[]]]]]],"^J","^30","^6","devtools/formatters/markup.cljs","^:",20,"^7E",["^I",[[]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",461,"^7I","^7V","^9",461,"^7K",0,"^7L",true,"^H",["^I",["^7C",["^I",[[]]]]]],"~$<expandable>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^H",["^I",["^7C",["^I",[["~$&","^8Y"]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]]],"^J","^46","^6","devtools/formatters/markup.cljs","^:",19,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8Y"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7J"]],"^7",36,"^7I","^7V","^9",36,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^8Y"]]]],"~$<type>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",279,"^8",7,"^9",279,"^:",13,"^H",["^I",["^7C",["^I",[["^8R","~$&",["^8S"]]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8R",["^8S"]]]],"^H",["^I",[["^8R","~$&",["^8S"]]]],"^7G",["^I",[null]]]],"^J","^38","^6","devtools/formatters/markup.cljs","^:",13,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8R",["^8S"]]]],"^H",["^I",[["^8R","~$&",["^8S"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8R",["^8S"]]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^7J"]],"^7",279,"^7I","^7V","^9",279,"^7K",1,"^7L",true,"^H",["^I",[["^8R","~$&",["^8S"]]]]],"~$<protocol-method-arity>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",293,"^8",7,"^9",293,"^:",30,"^H",["^I",["^7C",["^I",[["~$arity-fn"]]]]]],"^J","^37","^6","devtools/formatters/markup.cljs","^:",30,"^7E",["^I",[["^99"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",293,"^7I","^7U","^9",293,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^99"]]]]]],"~$<raw-surrogate>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^H",["^I",["^7C",["^I",[["~$&","^7P"]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]]],"^J","^4M","^6","devtools/formatters/markup.cljs","^:",22,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7P"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7U"]],"^7",40,"^7I","^7V","^9",40,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^7P"]]]],"~$<type-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",271,"^8",7,"^9",271,"^:",21,"^H",["^I",["^7C",["^I",[["^8R","^1J","~$_name","^8I"]]]]]],"^J","^36","^6","devtools/formatters/markup.cljs","^:",21,"^7E",["^I",[["^8R","^1J","^9<","^8I"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",271,"^7I","^7J","^9",271,"^7K",4,"^7L",true,"^H",["^I",["^7C",["^I",[["^8R","^1J","^9<","^8I"]]]]]],"~$<list>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",194,"^8",7,"^9",194,"^:",13,"^H",["^I",["^7C",["^I",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^9>","^9?",["^9@"]]]],"^H",["^I",[["^9>","^9?","~$&",["^9@"]]]],"^7G",["^I",[null]]]],"^J","^4I","^6","devtools/formatters/markup.cljs","^:",13,"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^9>","^9?",["^9@"]]]],"^H",["^I",[["^9>","^9?","~$&",["^9@"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^9>","^9?",["^9@"]]]],"^7F",null,"^7R",2,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",2,"^7H",true,"^7T","^7U"]],"^7",194,"^7I","^7V","^9",194,"^7K",2,"^7L",true,"^H",["^I",[["^9>","^9?","~$&",["^9@"]]]]],"~$<meta-wrapper>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",223,"^8",7,"^9",223,"^:",21,"^H",["^I",["^7C",["^I",[["~$metadata","~$&","^8Y"]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^9B","^8Y"]]],"^H",["^I",[["^9B","~$&","^8Y"]]],"^7G",["^I",[null]]]],"^J","^4J","^6","devtools/formatters/markup.cljs","^:",21,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^9B","^8Y"]]],"^H",["^I",[["^9B","~$&","^8Y"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^9B","^8Y"]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^7U"]],"^7",223,"^7I","^7V","^9",223,"^7K",1,"^7L",true,"^H",["^I",[["^9B","~$&","^8Y"]]]],"~$<protocol>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",17,"^H",["^I",["^7C",["^I",[["^8A","~$protocol","~$&",["^7["]]]]]],"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^8A","^9D",["^7["]]]],"^H",["^I",[["^8A","^9D","~$&",["^7["]]]],"^7G",["^I",[null]]]],"^J","^3F","^6","devtools/formatters/markup.cljs","^:",17,"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^8A","^9D",["^7["]]]],"^H",["^I",[["^8A","^9D","~$&",["^7["]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8A","^9D",["^7["]]]],"^7F",null,"^7R",2,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",2,"^7H",true,"^7T","^88"]],"^7",327,"^7I","^7V","^9",327,"^7K",2,"^7L",true,"^H",["^I",[["^8A","^9D","~$&",["^7["]]]]],"~$<index>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",142,"^8",7,"^9",142,"^:",14,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"^J","^3D","^6","devtools/formatters/markup.cljs","^:",14,"^7E",["^I",[["^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",142,"^7I","^7J","^9",142,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"~$<surrogate>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^H",["^I",["^7C",["^I",[["~$&",["^7N","~$header","~$body","~$start-index"]]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",[["^7N","^9G","^9H","^9I"]]]],"^H",["^I",[["~$&",["^7N","^9G","^9H","^9I"]]]],"^7G",["^I",[null]]]],"^J","^2Y","^6","devtools/formatters/markup.cljs","^:",18,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",[["^7N","^9G","^9H","^9I"]]]],"^H",["^I",[["~$&",["^7N","^9G","^9H","^9I"]]]],"^7G",["^I",[null]]],"^7E",[["^I",[["^7N","^9G","^9H","^9I"]]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7U"]],"^7",43,"^7I","^7V","^9",43,"^7K",0,"^7L",true,"^H",["^I",[["~$&",["^7N","^9G","^9H","^9I"]]]]],"~$<protocols-list>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",340,"^8",7,"^9",340,"^:",23,"^H",["^I",["^7C",["^I",[["^8A","~$protocols","~$&",["~$max-protocols"]]]]]],"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^8A","^9K",["^9L"]]]],"^H",["^I",[["^8A","^9K","~$&",["^9L"]]]],"^7G",["^I",[null]]]],"^J","^3B","^6","devtools/formatters/markup.cljs","^:",23,"^7Q",["^ ","^7H",true,"^7R",2,"^7K",2,"^7E",[["^I",["^8A","^9K",["^9L"]]]],"^H",["^I",[["^8A","^9K","~$&",["^9L"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8A","^9K",["^9L"]]]],"^7F",null,"^7R",2,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",2,"^7H",true,"^7T","^7U"]],"^7",340,"^7I","^7V","^9",340,"^7K",2,"^7L",true,"^H",["^I",[["^8A","^9K","~$&",["^9L"]]]]],"~$<meta>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",218,"^8",7,"^9",218,"^:",13,"^H",["^I",["^7C",["^I",[["^9B"]]]]]],"^J","^3K","^6","devtools/formatters/markup.cljs","^:",13,"^7E",["^I",[["^9B"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",218,"^7I","^7J","^9",218,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^9B"]]]]]],"~$<instance>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",392,"^8",7,"^9",392,"^:",17,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"^J","^3H","^6","devtools/formatters/markup.cljs","^:",17,"^7E",["^I",[["^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",392,"^7I","^7J","^9",392,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z"]]]]]],"~$<reference>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^H",["^I",["^7C",["^I",[["~$&","^7P"]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]]],"^J","^3R","^6","devtools/formatters/markup.cljs","^:",18,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^7P"]]],"^H",["^I",[["~$&","^7P"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^7P"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7U"]],"^7",47,"^7I","^7V","^9",47,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^7P"]]]],"~$<function-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",228,"^8",7,"^9",228,"^:",25,"^H",["^I",["^7C",["^I",[["~$fn-obj","^1J","^9<","^8W","~$prefix"]]]]]],"^J","^3T","^6","devtools/formatters/markup.cljs","^:",25,"^7E",["^I",[["^9Q","^1J","^9<","^8W","^9R"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",228,"^7I","^7J","^9",228,"^7K",5,"^7L",true,"^H",["^I",["^7C",["^I",[["^9Q","^1J","^9<","^8W","^9R"]]]]]],"~$<function>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",245,"^8",7,"^9",245,"^:",17,"^H",["^I",["^7C",["^I",[["^9Q"]]]]]],"^J","^3[","^6","devtools/formatters/markup.cljs","^:",17,"^7E",["^I",[["^9Q"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",245,"^7I","^7U","^9",245,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^9Q"]]]]]],"~$<arities>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",239,"^8",7,"^9",239,"^:",16,"^H",["^I",["^7C",["^I",[["^8W"]]]]]],"^J","^2L","^6","devtools/formatters/markup.cljs","^:",16,"^7E",["^I",[["^8W"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",239,"^7I","^7J","^9",239,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^8W"]]]]]],"~$<header-expander>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^H",["^I",["^7C",["^I",[["^7N"]]]]]],"^J","^2E","^6","devtools/formatters/markup.cljs","^:",24,"^7E",["^I",[["^7N"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",60,"^7I","^7U","^9",60,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^7N"]]]]]],"~$<list-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",191,"^8",7,"^9",191,"^:",21,"^H",["^I",["^7C",["^I",[["^9>","~$_opts"]]]]]],"^J","^4N","^6","devtools/formatters/markup.cljs","^:",21,"^7E",["^I",[["^9>","^9W"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",191,"^7I","^7J","^9",191,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^9>","^9W"]]]]]],"~$<circular-reference>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^H",["^I",["^7C",["^I",[["~$&","^8Y"]]]]],"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]]],"^J","^43","^6","devtools/formatters/markup.cljs","^:",27,"^7Q",["^ ","^7H",true,"^7R",0,"^7K",0,"^7E",[["^I",["^8Y"]]],"^H",["^I",[["~$&","^8Y"]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8Y"]]],"^7F",null,"^7R",0,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",0,"^7H",true,"^7T","^7U"]],"^7",53,"^7I","^7V","^9",53,"^7K",0,"^7L",true,"^H",["^I",[["~$&","^8Y"]]]],"~$<surrogate-target>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",420,"^8",7,"^9",420,"^:",25,"^H",["^I",["^7C",["^I",[["^85"]]]]]],"^J","^4<","^6","devtools/formatters/markup.cljs","^:",25,"^7E",["^I",[["^85"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",420,"^7I","^88","^9",420,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^85"]]]]]],"~$body-line",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",145,"^8",8,"^9",145,"^:",17,"~:private",true,"^H",["^I",["^7C",["^I",[["~$index","^7Z"]]]]]],"^9[",true,"^J","^2B","^6","devtools/formatters/markup.cljs","^:",17,"^7E",["^I",[["^:0","^7Z"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",145,"^7I","^7J","^9",145,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^:0","^7Z"]]]]]],"~$body-lines",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",159,"^8",8,"^9",159,"^:",18,"^9[",true,"^H",["^I",["^7C",["^I",[["^7Z","^87"]]]]]],"^9[",true,"^J","^2@","^6","devtools/formatters/markup.cljs","^:",18,"^7E",["^I",[["^7Z","^87"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",159,"^7I",["^F",["^88","^7J"]],"^9",159,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^7Z","^87"]]]]]],"~$<fields>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",369,"^8",7,"^9",369,"^:",15,"^H",["^I",["^7C",["^I",[["^8@","~$&",["~$max-fields"]]]]]],"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8@",["^:3"]]]],"^H",["^I",[["^8@","~$&",["^:3"]]]],"^7G",["^I",[null]]]],"^J","^49","^6","devtools/formatters/markup.cljs","^:",15,"^7Q",["^ ","^7H",true,"^7R",1,"^7K",1,"^7E",[["^I",["^8@",["^:3"]]]],"^H",["^I",[["^8@","~$&",["^:3"]]]],"^7G",["^I",[null]]],"^7E",[["^I",["^8@",["^:3"]]]],"^7F",null,"^7R",1,"^7G",["^I",[null]],"^8",1,"^7H",true,"^7S",[["^ ","^7R",1,"^7H",true,"^7T","^88"]],"^7",369,"^7I","^7V","^9",369,"^7K",1,"^7L",true,"^H",["^I",[["^8@","~$&",["^:3"]]]]],"~$<nil>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^H",["^I",["^7C",["^I",[[]]]]]],"^J","^42","^6","devtools/formatters/markup.cljs","^:",12,"^7E",["^I",[[]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",68,"^7I","^7J","^9",68,"^7K",0,"^7L",true,"^H",["^I",["^7C",["^I",[[]]]]]],"~$<body>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",118,"^8",7,"^9",118,"^:",13,"^H",["^I",["^7C",["^I",[["~$markup"]]]]]],"^J","^48","^6","devtools/formatters/markup.cljs","^:",13,"^7E",["^I",[["^:6"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",118,"^7I","^7J","^9",118,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^:6"]]]]]],"~$<number>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^H",["^I",["^7C",["^I",[["~$number"]]]]]],"^J","^4F","^6","devtools/formatters/markup.cljs","^:",15,"^7E",["^I",[["^:8"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",81,"^7I","^7J","^9",81,"^7K",1,"^7L",true,"^H",["^I",["^7C",["^I",[["^:8"]]]]]],"~$<protocol-details>",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",318,"^8",7,"^9",318,"^:",25,"^H",["^I",["^7C",["^I",[["^8A","^1J","^9<","~$selector","~$_fast?"]]]]]],"^J","^4C","^6","devtools/formatters/markup.cljs","^:",25,"^7E",["^I",[["^8A","^1J","^9<","^::","^:;"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",318,"^7I","^7J","^9",318,"^7K",5,"^7L",true,"^H",["^I",["^7C",["^I",[["^8A","^1J","^9<","^::","^:;"]]]]]],"~$prepare-body-lines",["^ ","^7B",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",151,"^8",8,"^9",151,"^:",26,"^9[",true,"^H",["^I",["^7C",["^I",[["~$data","^87"]]]]]],"^9[",true,"^J","^4?","^6","devtools/formatters/markup.cljs","^:",26,"^7E",["^I",[["^:=","^87"]]],"^7F",null,"^7G",["^I",[null,null]],"^8",1,"^7H",false,"^7",151,"^7I",["^F",["^88","^7J"]],"^9",151,"^7K",2,"^7L",true,"^H",["^I",["^7C",["^I",[["^:=","^87"]]]]]]],"^10",["^ ","^D","^D","^X","^X","^V","^V","^W","^V"],"~:cljs.analyzer/constants",["^ ","^Z",["^F",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:float-infinity-tag","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^L","~:symbol","~:fields-details-row","^J","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:float-nan-tag","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^7T","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^4[",[["^>Q","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^>Q","~:shadow-tweaks"],null,["^>Q","~:source-map-inline"],null,["^>Q","~:shadow-optimize-constants"],null,["^>Q","~:elide-asserts"],false,["^>Q","~:optimize-constants"],null,["^>Q","^1T"],null,["^>Q","~:external-config"],null,["^>Q","~:tooling-config"],null,["^>Q","~:emit-constants"],null,["^>Q","~:load-tests"],null,["^>Q","~:form-size-threshold"],null,["^>Q","~:global-goog-object&array"],null,["^>Q","~:data-readers"],null,["~:shadow.build/config","^=W"],"~:browser",["^>Q","~:infer-externs"],"~:auto",["^>Q","^1V"],null,["^>S","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>Q","~:fn-invoke-direct"],null,["^>Q","~:source-map"],"/dev/null"]]]